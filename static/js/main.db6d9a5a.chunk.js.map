{"version":3,"sources":["logo.svg","notes.js","NotePicker.js","WeightedSlider.js","WeightedSelect.js","TabDisplay.js","BpmInput.js","Riffbot.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","strings","noteRythms","noteRythmSymbols","rythmToTabSpace","notesPerBeat","noteCodeToSymbol","noteCode","replace","rythmCodeToSymbol","rythmCode","tabToNoteCode","tab","Array","isArray","noteCodes","forEach","note","tokens","split","push","tabToNoteDomNode","map","index","key","className","NotePicker","props","state","synth","this","selectNote","deselectNote","string1","GuitarNotes","fretNote","string","fret","string2","string3","string4","string5","string6","fretNumbers","React","Component","GuitarFret","type","id","onChange","handleCheck","bind","e","target","checked","playNote","triggerAttackRelease","WeightedSlider","identifier","sliderRef","createRef","deselect","onClick","symbolConverter","min","max","classRef","defaultValue","defaultWeight","step","onInput","handleSlide","ref","current","disabled","document","getElementById","rythmSliders","from","getElementsByClassName","remainingSliders","indexOf","splice","sumRemaining","slider","parseFloat","value","up","unlockedSliders","totalToMove","Math","abs","i","length","space","moveAmount","totalCheck","s","updateWeights","WeightedSelect","selectionRefs","collection","diff","pop","sliders","element","defaultWeights","selectRef","setWeight","TabDisplay","window","jtab","render","tabNotation","generateTabNotation","notes","notation","barBeats","chord","rythm","noteToTabNotation","chordNote","BpmInput","incrementBPM","n","bpm","parseInt","round","Tone","innerText","RiffBot","selectChordNote","deselectChordNote","setNoteWeight","setRythmWeight","triggerNote","initRythmWeights","distortion","reverb","envelope","attack","decay","sustain","release","decayCurve","chain","riffNotes","selectedNotes","selectedNoteWeights","selectedRythmWeights","chordMode","chordSelectedNotes","initNoteWeights","chordPicker","addChord","toggleChords","deselectAllNotes","makeRiff","name","label","startRiff","stopRiff","setState","concat","newNotes","newWeights","noteCb","playSelectedChordNotes","cbs","querySelectorAll","weight","start","stop","time","duration","noteWeights","chances","Object","keys","weightedRandom","includes","remainingBeats","reweightedRythms","weightToDistribute","nPossibleRythms","arr","sum","reduce","acc","el","rand","random","filter","cancel","createRiff","position","bars","bar","beatsRemaining","currentBeat","noteRythm","randomNoteRythm","beats","randomNoteTab","randomNote","schedule","numNotes","notePos","loopEnd","loop","App","href","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db6d9a5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nexport const strings = [\r\n    ['E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'Bb4', 'B4', 'C5', 'C#5', 'D5', 'D#5', 'E5', 'F5', 'F#5', 'G5', 'G#5', 'A5', 'Bb5', 'B5', 'C6', 'C#6', 'D6', 'D#6', 'E6'],\r\n    ['B3', 'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'Bb4', 'B4', 'C5', 'C#5', 'D5', 'D#5', 'E5', 'F5', 'F#5', 'G5', 'G#5', 'A5', 'Bb5', 'B5'],\r\n    ['G3', 'G#3', 'A3', 'Bb3', 'B3', 'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'Bb4', 'B4', 'C5', 'C#5', 'D5', 'D#5', 'E5', 'F5', 'F#5', 'G5'],\r\n    ['D3', 'D#3', 'E3', 'F3', 'F#3', 'G3', 'G#3', 'A3', 'Bb3', 'B3', 'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4', 'Bb4', 'B4', 'C5', 'C#5', 'D5'],\r\n    ['A2', 'Bb2', 'B2', 'C3', 'C#3', 'D3', 'D#3', 'E3', 'F3', 'F#3', 'G3', 'G#3', 'A3', 'Bb3', 'B3', 'C4', 'C#4', 'D4', 'D#4', 'E4', 'F4', 'F#4', 'G4', 'G#4', 'A4'],\r\n    ['E2', 'F2', 'F#2', 'G2', 'G#2', 'A2', 'Bb2', 'B2', 'C3', 'C#3', 'D3', 'D#3', 'E3', 'F3', 'F#3', 'G3', 'G#3', 'A3', 'Bb3', 'B3', 'C4', 'C#4', 'D4', 'D#4', 'E4'],\r\n\r\n];\r\n\r\nexport const noteRythms = ['1n', '2n', '4n', '8n', '8t', '16n', '16t'];\r\n\r\nexport const noteRythmSymbols = {\r\n    '1n' : '𝅝',\r\n    '2n' : '𝅗𝅥',\r\n    '4n' : '𝅘𝅥',\r\n    '8n' : '𝅘𝅥𝅮𝅘𝅥𝅮',\r\n    '8t' : '𝅘𝅥𝅮𝅘𝅥𝅮𝅘𝅥𝅮',\r\n    '16n' : '𝅘𝅥𝅯𝅘𝅥𝅯𝅘𝅥𝅯𝅘𝅥𝅯',\r\n    '16t' : '𝅘𝅥𝅯𝅘𝅥𝅯𝅘𝅥𝅯𝅘𝅥𝅯𝅘𝅥𝅯𝅘𝅥𝅯'\r\n};\r\n\r\nexport const rythmToTabSpace = {\r\n    '1n' : '                ',\r\n    '2n' : '        ',\r\n    '4n' : '    ',\r\n    '8n' : '  ',\r\n    '8t' : '  ',\r\n    '16n' : ' ',\r\n    '16t' : ' '\r\n}\r\n\r\nexport const notesPerBeat = {\r\n    '1n' : 0.25,\r\n    '2n' : 0.5,\r\n    '4n' : 1,\r\n    '8n' : 2,\r\n    '8t' : 3,\r\n    '16n' : 4,\r\n    '16t' : 6\r\n}\r\n\r\nexport function noteCodeToSymbol(noteCode){\r\n    return noteCode.replace('#', '♯').replace('b','♭');\r\n}\r\n\r\nexport function rythmCodeToSymbol(rythmCode){\r\n    return noteRythmSymbols[rythmCode];\r\n}\r\n\r\nexport function tabToNoteCode(tab){\r\n    if(tab){\r\n\r\n        if(Array.isArray(tab)){\r\n            var noteCodes = [];\r\n\r\n            tab.forEach(note => {\r\n                let tokens = note.split(':');\r\n                noteCodes.push(strings[tokens[0]-1][tokens[1]]);\r\n            });\r\n            \r\n            return noteCodes;\r\n        }\r\n        else{\r\n            let tokens = tab.split(':');\r\n            return strings[tokens[0]-1][tokens[1]];\r\n        }\r\n  \r\n    }else{\r\n        return tab;\r\n    }\r\n}\r\n\r\nexport function tabToNoteDomNode(tab){\r\n    if(tab){\r\n\r\n        var notes = tab.split(',');\r\n        var domNode = notes.map((note, index) =>\r\n            <p key={note + index} className=\"noteSymbol\">{noteCodeToSymbol(tabToNoteCode(note))}<sub>{note.split(':')[0]}</sub></p>\r\n        );\r\n        return domNode;\r\n\r\n    }else{\r\n        return tab;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport * as GuitarNotes from './notes';\r\n\r\nclass NotePicker extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n  \r\n      this.state = {\r\n        synth: props.synth\r\n      }\r\n\r\n    }\r\n  \r\n    render(){\r\n\r\n      this.selectNote = this.props.selectNote;\r\n      this.deselectNote = this.props.deselectNote;\r\n  \r\n      const string1 = GuitarNotes.strings[0].map((fretNote, index) =>\r\n        <GuitarFret key={fretNote + \":1\"} note={fretNote} string={1} fret={index} synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></GuitarFret>\r\n      );\r\n      const string2 = GuitarNotes.strings[1].map((fretNote, index) =>\r\n        <GuitarFret key={fretNote + \":2\"} note={fretNote} string={2} fret={index} synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></GuitarFret>\r\n      );\r\n      const string3 = GuitarNotes.strings[2].map((fretNote, index) =>\r\n        <GuitarFret key={fretNote + \":3\"} note={fretNote} string={3} fret={index} synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></GuitarFret>\r\n      );\r\n      const string4 = GuitarNotes.strings[3].map((fretNote, index) =>\r\n        <GuitarFret key={fretNote + \":4\"} note={fretNote} string={4} fret={index} synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></GuitarFret>\r\n      );\r\n      const string5 = GuitarNotes.strings[4].map((fretNote, index) =>\r\n        <GuitarFret key={fretNote + \":5\"} note={fretNote} string={5} fret={index} synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></GuitarFret>\r\n      );\r\n      const string6 = GuitarNotes.strings[5].map((fretNote, index) =>\r\n        <GuitarFret key={fretNote + \":6\"} note={fretNote} string={6} fret={index} synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></GuitarFret>\r\n      );\r\n      const fretNumbers = GuitarNotes.strings[0].map((fretNote, index) =>\r\n        <th key={\"fret\" + index} className=\"fret\">{index}</th>\r\n      );\r\n  \r\n      return(\r\n        <div className=\"notePicker\">\r\n          <table className=\"guitarNeck\">\r\n            <tbody>\r\n              <tr className=\"guitarString\"><th className=\"fret\">1</th>{string1}</tr>\r\n              <tr className=\"guitarString\"><th className=\"fret\">2</th>{string2}</tr>\r\n              <tr className=\"guitarString\"><th className=\"fret\">3</th>{string3}</tr>\r\n              <tr className=\"guitarString\"><th className=\"fret\">4</th>{string4}</tr>\r\n              <tr className=\"guitarString\"><th className=\"fret\">5</th>{string5}</tr>\r\n              <tr className=\"guitarString\"><th className=\"fret\">6</th>{string6}</tr>\r\n              <tr><th className=\"fret\"></th>{fretNumbers}</tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n    }\r\n  \r\n  }\r\n  \r\n  class GuitarFret extends React.Component {\r\n  \r\n    constructor(props){\r\n      super(props);\r\n  \r\n      this.state = {\r\n        note: props.note,\r\n        synth: props.synth\r\n      }\r\n  \r\n    }\r\n  \r\n    render(){\r\n      return(\r\n        <td className=\"fret\">\r\n          <label className=\"fret\">\r\n            <input type=\"checkbox\" id={'pick_' + this.props.string + ':' + this.props.fret} onChange={this.handleCheck.bind(this)}/>\r\n            <span>{GuitarNotes.noteCodeToSymbol(this.state.note)}</span>\r\n          </label>\r\n        </td>\r\n      )\r\n    }\r\n  \r\n    \r\n    handleCheck(e){\r\n  \r\n      if(e.target.checked){\r\n        this.props.selectNote(this.props.string + \":\" + this.props.fret);\r\n        this.playNote();\r\n      }else{\r\n        this.props.deselectNote(this.props.string + \":\" + this.props.fret);\r\n      }\r\n     \r\n    }\r\n  \r\n    playNote(){\r\n      this.state.synth.triggerAttackRelease(this.state.note, \"2n\");  \r\n    }\r\n  \r\n  \r\n  }\r\n\r\n  export default NotePicker;","import React from 'react';\r\n\r\nclass WeightedSlider extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      identifier: props.identifier,\r\n      sliderRef: React.createRef()\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n\r\n    var deselect = null;\r\n    if(this.props.deselectNote){\r\n      deselect = <button className=\"altButton\" onClick={() => this.props.deselectNote(this.state.identifier)}>X</button>\r\n    }\r\n\r\n    return(\r\n      <li>\r\n          \r\n          <span>{this.props.symbolConverter(this.state.identifier)}</span>\r\n          <input type=\"range\" min=\"0\" max=\"100\" className={this.props.classRef} defaultValue={this.props.defaultWeight} step=\"0.01\" onInput={this.handleSlide.bind(this)} ref={this.state.sliderRef}></input>\r\n          <label className=\"lock\">\r\n            <input type=\"checkbox\" className=\"lock\" onChange={this.handleCheck.bind(this)}/>\r\n            <i id ={\"lockToggle-\" + this.props.id} className=\"fa fa-unlock lock\"></i>\r\n          </label>\r\n          {deselect}\r\n      </li>\r\n    )\r\n  }\r\n  \r\n  handleCheck(e){\r\n\r\n    if(e.target.checked){\r\n      this.state.sliderRef.current.disabled = true;\r\n      document.getElementById(\"lockToggle-\" + this.props.id).className = \"fa fa-lock lock\";\r\n    }else{\r\n      this.state.sliderRef.current.disabled = false;\r\n      e.target.className = \"unlock\";\r\n      document.getElementById(\"lockToggle-\" + this.props.id).className = \"fa fa-unlock lock\";\r\n    }\r\n  \r\n  }\r\n\r\n  //When one slider moves, all others are adjusted so that their total equals 100\r\n  handleSlide(e){\r\n    const rythmSliders = Array.from(document.getElementsByClassName(this.props.classRef));\r\n    \r\n    //Remove the slider that is being used\r\n    var remainingSliders = [...rythmSliders];\r\n    var index = remainingSliders.indexOf(e.target);\r\n    if(index > -1){\r\n      remainingSliders.splice(index, 1);\r\n    }\r\n\r\n    //Check if slider moved up or down\r\n    var sumRemaining = 0;\r\n    remainingSliders.forEach(slider => {\r\n      sumRemaining += parseFloat(slider.value);\r\n    });\r\n    var up = (sumRemaining + parseFloat(e.target.value)) > 100 ? true : false; \r\n\r\n    //Filter out locked sliders\r\n    var unlockedSliders = [];\r\n    remainingSliders.forEach(slider => {\r\n      if(slider.disabled == false){\r\n        unlockedSliders.push(slider);\r\n      }\r\n    });\r\n\r\n    //Move remaining sliders\r\n    var totalToMove = Math.abs(100 - sumRemaining - e.target.value);\r\n    for(var i = unlockedSliders.length; i > 0; i--){\r\n      var space = up ? parseFloat(unlockedSliders[i-1].value) : 100 - parseFloat(unlockedSliders[i-1].value);\r\n      var moveAmount = Math.min(totalToMove / i, space);\r\n\r\n      unlockedSliders[i - 1].value = parseFloat(unlockedSliders[i - 1].value) + (up ? -moveAmount : moveAmount);\r\n      \r\n      totalToMove -= Math.abs(moveAmount);\r\n    }\r\n\r\n\r\n    //Check changed total, and if necessary snap selected slider to value such that the total == 100\r\n    //This is needed in the event of locked sliders.\r\n    var totalCheck = 0;\r\n    rythmSliders.forEach(s => {\r\n      totalCheck += parseFloat(s.value);\r\n    });\r\n\r\n    if(totalCheck != 100){\r\n      e.target.value = 100 - sumRemaining;\r\n    }\r\n    \r\n    //Send slider values up to parent\r\n    if(typeof this.props.updateWeights === \"function\"){\r\n        this.props.updateWeights();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default WeightedSlider;","import React from 'react';\r\nimport WeightedSlider from './WeightedSlider'\r\n\r\nclass WeightedSelect extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.updateWeights = this.updateWeights.bind(this);\r\n\r\n    this.selectionRefs = [];\r\n    for(var i = 0; i < this.props.collection.length; i++){ \r\n      this.selectionRefs.push(React.createRef());\r\n    }\r\n\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    //Maintain refs\r\n    if(this.selectionRefs.length < this.props.collection.length){\r\n      var diff = this.props.collection.length - this.selectionRefs.length;\r\n      for(var i = 0; i < diff; i++){\r\n        this.selectionRefs.push(React.createRef());\r\n      }\r\n    }else if(this.selectionRefs.length > this.props.collection.length){\r\n      var diff = this.selectionRefs.length - this.props.collection.length;\r\n      for(var i = 0; i < diff; i++){\r\n        this.selectionRefs.pop();\r\n      }\r\n    }\r\n\r\n    const sliders = this.props.collection.map((element, index) =>\r\n      <WeightedSlider key={element + \":\" + index} identifier={element} id={element + \":\" + index} defaultWeight={this.props.defaultWeights[element]} classRef={this.props.classRef} \r\n      ref={this.selectionRefs[index]} updateWeights={this.updateWeights} symbolConverter={this.props.symbolConverter} deselectNote={this.props.deselectNote}></WeightedSlider>\r\n    );       \r\n      \r\n    return(\r\n      <div>\r\n          <ul>\r\n            {sliders}\r\n          </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateWeights(){\r\n\r\n    this.selectionRefs.forEach(selectRef => {\r\n      this.props.setWeight(selectRef.current.state.identifier, parseFloat(selectRef.current.state.sliderRef.current.value));\r\n    });\r\n  }\r\n  \r\n}\r\n  \r\n\r\nexport default WeightedSelect;","import React from 'react';\r\nimport * as GuitarNotes from './notes';\r\n\r\nclass TabDisplay extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n  \r\n  //Init Empty TAB\r\n  componentDidMount(){\r\n    window.jtab.render(document.getElementById('jtabRender'),'$ ||');\r\n  }\r\n\r\n  //Draw TAB\r\n  componentDidUpdate(){\r\n    var tabNotation = this.generateTabNotation(this.props.notes);\r\n    window.jtab.render(document.getElementById('jtabRender'),tabNotation);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div id=\"jtabRender\"></div>\r\n    )\r\n  }\r\n\r\n\r\n  //Takes array of notes of form: [string:fret,string:fret,...]-rythm\r\n  //Returns jtab notation\r\n  generateTabNotation(notes){\r\n\r\n    var notation = \"$ \";\r\n\r\n    var barBeats = 0;\r\n    \r\n    notes.forEach(note => {\r\n      if(note){\r\n\r\n        let tokens = note.split(\"-\");\r\n\r\n        let chord = tokens[0];\r\n        let rythm = tokens[1];\r\n\r\n        barBeats += 1 / GuitarNotes.notesPerBeat[rythm];\r\n        \r\n        //notation += \" $\" + string + \" \" + fret + \" \" + GuitarNotes.rythmToTabSpace[rythm];\r\n        notation += this.noteToTabNotation(chord) + GuitarNotes.rythmToTabSpace[rythm];\r\n\r\n        if(barBeats >= 3.9){\r\n          notation += \" |\";\r\n          barBeats = 0;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    notation += \"|\";\r\n\r\n    return  notation;\r\n  }\r\n\r\n  //Takes note of form: [string:fret,string:fret,...]\r\n  //Returns jtab notation\r\n  noteToTabNotation(note){\r\n  \r\n    var notation = \" \";\r\n    var chordNotes = note.split(\",\");\r\n\r\n    chordNotes.forEach(chordNote => {\r\n      let tokens = chordNote.split(\":\");\r\n      let string = tokens[0];\r\n      let fret = tokens[1];\r\n\r\n      notation += \"$\" + string + \".\" + fret + \".\"\r\n\r\n    });\r\n\r\n    return notation;\r\n  }\r\n\r\n}\r\n  \r\n\r\nexport default TabDisplay;","import React from 'react';\r\nimport * as Tone from 'tone';\r\n\r\nclass BpmInput extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n         \r\n    return(\r\n    <div className=\"optionContainer\">\r\n        <span>BPM</span>\r\n        <button className=\"subButton\" onClick={() => this.incrementBPM(-5)}>-</button>\r\n        <span id=\"bpmValueDisplay\">120</span>    \r\n        <button className=\"subButton\" onClick={() => this.incrementBPM(5)}>+</button> \r\n    </div>\r\n    )\r\n  }\r\n\r\n  incrementBPM(n){\r\n    const bpm = parseInt(Math.round(Tone.Transport.bpm.value) + n);\r\n\r\n    if(bpm >= 0 && bpm <= 300){\r\n        document.getElementById(\"bpmValueDisplay\").innerText = bpm;\r\n        Tone.Transport.bpm.value = bpm;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n  \r\n\r\nexport default BpmInput;","import * as Tone from 'tone';\r\nimport React from 'react';\r\nimport NotePicker from './NotePicker';\r\nimport WeightedSelect from './WeightedSelect';\r\nimport * as GuitarNotes from './notes';\r\nimport TabDisplay from './TabDisplay';\r\nimport BpmInput from './BpmInput';\r\n\r\nclass RiffBot extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n  \r\n      this.selectNote = this.selectNote.bind(this);\r\n      this.deselectNote = this.deselectNote.bind(this);\r\n      this.selectChordNote = this.selectChordNote.bind(this);\r\n      this.deselectChordNote = this.deselectChordNote.bind(this);\r\n      this.setNoteWeight = this.setNoteWeight.bind(this);\r\n      this.setRythmWeight = this.setRythmWeight.bind(this);\r\n      this.triggerNote = this.triggerNote.bind(this);\r\n\r\n      const initRythmWeights = {};\r\n      GuitarNotes.noteRythms.forEach(rythm => {\r\n        initRythmWeights[rythm] = 100 / GuitarNotes.noteRythms.length;\r\n      });\r\n  \r\n      var distortion = new Tone.Distortion(10);\r\n      var reverb = new Tone.Reverb(2);\r\n\r\n      this.state = {\r\n      \r\n        synth: new Tone.PolySynth(Tone.Synth, {\r\n          envelope : {\r\n            attack : 0.01,\r\n            decay : 20,\r\n            sustain : 0.01,\r\n            release : 0.1,\r\n            decayCurve : \"exponential\"\r\n          }\r\n        }).chain(distortion, Tone.Master).chain(reverb, Tone.Master),\r\n\r\n        riffNotes: [],\r\n\r\n        selectedNotes: [],\r\n        selectedNoteWeights: {},\r\n        selectedRythmWeights: initRythmWeights,\r\n\r\n        chordMode: false,\r\n        chordSelectedNotes: []\r\n\r\n      }   \r\n    }\r\n  \r\n    render(){\r\n\r\n      const initNoteWeights = {};\r\n      this.state.selectedNotes.forEach(note => {\r\n        initNoteWeights[note] = 0;\r\n      });\r\n\r\n      var chordPicker = this.state.chordMode ? \r\n        <div>\r\n          <NotePicker synth={this.state.synth} selectNote={this.selectChordNote} deselectNote={this.deselectChordNote}></NotePicker>\r\n          <button onClick={() => this.addChord()}>Add Chord</button>\r\n        </div>\r\n      :\r\n        null;\r\n\r\n      return(\r\n        <div>\r\n\r\n          <NotePicker synth={this.state.synth} selectNote={this.selectNote} deselectNote={this.deselectNote}></NotePicker>\r\n          {chordPicker}\r\n    \r\n          <label className=\"mainCheckBox\">\r\n            <input type=\"checkbox\" onChange={this.toggleChords.bind(this)}/>\r\n            <span>Chords</span>\r\n          </label>\r\n\r\n          <button onClick={() => this.deselectAllNotes()}>Clear All</button>\r\n          <button onClick={() => this.makeRiff()}>Generate Riff</button>\r\n\r\n          <select name=\"bars\" id=\"barSelect\" defaultValue=\"4\">\r\n            <optgroup label=\"Bars\">\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n              <option value=\"7\">7</option>\r\n              <option value=\"8\">8</option>\r\n            </optgroup>\r\n          </select>\r\n  \r\n          <button onClick={() => this.startRiff()}><i className=\"fa fa-play\"></i></button>\r\n          <button onClick={() => this.stopRiff()}><i className=\"fa fa-stop\"></i></button>\r\n          <BpmInput></BpmInput>\r\n\r\n          <TabDisplay notes={this.state.riffNotes}></TabDisplay>\r\n\r\n          <WeightedSelect collection={GuitarNotes.noteRythms} defaultWeights={this.state.selectedRythmWeights} \r\n            setWeight={this.setRythmWeight} classRef=\"rythmSlider\" symbolConverter={GuitarNotes.rythmCodeToSymbol}></WeightedSelect> \r\n\r\n          <WeightedSelect collection={this.state.selectedNotes} defaultWeights={initNoteWeights} \r\n            setWeight={this.setNoteWeight} classRef=\"noteSlider\" symbolConverter={GuitarNotes.tabToNoteDomNode} deselectNote={this.deselectNote}></WeightedSelect>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  \r\n    selectNote(note){\r\n      this.setState({\r\n        selectedNotes : this.state.selectedNotes.concat(note)\r\n      });\r\n    }\r\n  \r\n    deselectNote(note){\r\n      const newNotes = this.state.selectedNotes;\r\n      const index = newNotes.indexOf(note);\r\n      if(index > -1){\r\n        newNotes.splice(index, 1);\r\n      }\r\n\r\n      const newWeights = this.state.selectedNoteWeights;\r\n      delete newWeights[note];\r\n  \r\n      this.setState({\r\n        selectedNotes: newNotes,\r\n        selectedNoteWeights: newWeights\r\n      });\r\n\r\n      //Uncheck note\r\n      const noteCb = document.getElementById(\"pick_\" + note);\r\n      if(noteCb){\r\n        noteCb.checked = false;\r\n      }\r\n      \r\n    }\r\n\r\n    selectChordNote(note){\r\n      this.setState({\r\n        chordSelectedNotes : this.state.chordSelectedNotes.concat(note)\r\n      });   \r\n    }\r\n\r\n    deselectChordNote(note){\r\n      const newNotes = this.state.chordSelectedNotes;\r\n      const index = newNotes.indexOf(note);\r\n      if(index > -1){\r\n        newNotes.splice(index, 1);\r\n      }\r\n\r\n      this.setState({\r\n        chordSelectedNotes: newNotes,\r\n      });\r\n\r\n    }\r\n\r\n    addChord(){\r\n\r\n      if(this.state.chordSelectedNotes.length === 0){\r\n        return;\r\n      }\r\n\r\n      var chord = \"\";\r\n\r\n      this.state.chordSelectedNotes.forEach(note => {\r\n        chord += note + \",\";\r\n      });\r\n\r\n      this.setState({\r\n        selectedNotes : this.state.selectedNotes.concat(chord)\r\n      });\r\n\r\n      this.playSelectedChordNotes();\r\n      \r\n    }\r\n  \r\n    deselectAllNotes(){\r\n      var cbs = document.querySelectorAll('td.fret input');\r\n  \r\n      for(var i = 0; i < cbs.length; i++){\r\n        if(cbs[i].type === 'checkbox'){\r\n          cbs[i].checked = false;\r\n        }\r\n      }\r\n  \r\n      this.setState({\r\n        selectedNotes: [],\r\n        selectedNoteWeights: {},\r\n        chordSelectedNotes: []\r\n      });\r\n      \r\n    }\r\n\r\n    setNoteWeight(note, weight){\r\n      this.state.selectedNoteWeights[note] = weight;\r\n    }\r\n\r\n\r\n    setRythmWeight(rythm, weight){\r\n      this.state.selectedRythmWeights[rythm] = weight;\r\n    }\r\n\r\n    toggleChords(e){\r\n      if(e.target.checked){\r\n        this.setState({chordMode: true });\r\n      }else{\r\n        this.setState({\r\n          chordMode: false,\r\n          chordSelectedNotes: []\r\n        });\r\n      }\r\n    }\r\n  \r\n    playSelectedChordNotes(){\r\n      this.state.synth.triggerAttackRelease(GuitarNotes.tabToNoteCode(this.state.chordSelectedNotes), \"2n\");\r\n    }\r\n\r\n    startRiff(){\r\n      Tone.Transport.start();\r\n    }\r\n\r\n    stopRiff(){\r\n      Tone.Transport.stop();\r\n    }\r\n\r\n    triggerNote(time, note, duration){\r\n        this.state.synth.triggerAttackRelease(note, duration, time);\r\n    }\r\n\r\n    randomNote(){\r\n      var noteWeights = {...this.state.selectedNoteWeights};\r\n\r\n      var chances = Object.keys(noteWeights).map(function(key){\r\n        return noteWeights[key];\r\n      });\r\n\r\n      var note = this.weightedRandom(Object.keys(noteWeights), chances);\r\n\r\n      //Chord\r\n      if(note && note.includes(',')){\r\n        var chord = [];\r\n        var chordNotes = note.split(',');\r\n        chordNotes.forEach(chordNote => {\r\n          if(chordNote != \"\"){\r\n            chord.push(chordNote);\r\n          }\r\n        });\r\n        return chord;\r\n      }\r\n        \r\n      return note;  \r\n    }\r\n\r\n    randomNoteRythm(remainingBeats){\r\n\r\n      let reweightedRythms = {...this.state.selectedRythmWeights};\r\n      let weightToDistribute = 0;\r\n      let nPossibleRythms = 0;\r\n\r\n      //Elminate rythms that dont fit in remaining beats\r\n      for(var key in reweightedRythms){\r\n        let beats = 1 / GuitarNotes.notesPerBeat[key];\r\n\r\n        if(beats > remainingBeats){\r\n          weightToDistribute += reweightedRythms[key];\r\n          reweightedRythms[key] = 0;\r\n        }else{\r\n          nPossibleRythms++;\r\n        }\r\n      }\r\n\r\n      //Redistribute weight from rythms that dont fit in remaining beats\r\n      for(var key in reweightedRythms){\r\n        if(reweightedRythms[key] != 0){\r\n          reweightedRythms[key] += weightToDistribute / nPossibleRythms;\r\n        }\r\n      }\r\n\r\n      //Random weighted selection\r\n      var chances = Object.keys(reweightedRythms).map(function(key){\r\n        return reweightedRythms[key];\r\n      });\r\n\r\n      return this.weightedRandom(Object.keys(reweightedRythms), chances);\r\n\r\n    }\r\n\r\n    weightedRandom(arr, chances){\r\n      var sum = chances.reduce((acc, el) => acc + el, 0);\r\n      var acc = 0;\r\n      chances = chances.map(el => (acc = el + acc));\r\n      var rand = Math.random() * sum;\r\n\r\n      return arr[chances.filter(el => el <= rand).length];\r\n\r\n    }\r\n\r\n    //Wrapper for createRiff\r\n    makeRiff(){\r\n\r\n        //Clear transport for new riff\r\n        Tone.Transport.cancel();\r\n\r\n        var notes = [];\r\n\r\n        //Create riff if > 0 notes are selected and weighted\r\n        if(Object.keys(this.state.selectedNoteWeights).length != 0){\r\n          notes = this.createRiff();\r\n          Tone.Transport.position = 0;\r\n        }\r\n      \r\n        this.setState({\r\n          riffNotes: notes\r\n        });\r\n    \r\n    }\r\n\r\n    createRiff(){\r\n\r\n      const bars = parseInt(document.getElementById(\"barSelect\").value);\r\n\r\n      //Store notes to be used for tablature display\r\n      var notes = [];\r\n\r\n      for(let bar = 0; bar < bars; bar++){\r\n\r\n        let beatsRemaining = 4; //4 Beats per bar. TODO: add configurable time signatures\r\n        let currentBeat = 0;\r\n\r\n        while(beatsRemaining > 0){\r\n          let noteRythm = this.randomNoteRythm(beatsRemaining);\r\n          let beats = 1 / GuitarNotes.notesPerBeat[noteRythm];\r\n\r\n          //Whole, half, quarter notes\r\n          if(beats >= 1){\r\n            let randomNoteTab = this.randomNote();\r\n            let randomNote = GuitarNotes.tabToNoteCode(randomNoteTab);\r\n\r\n            Tone.Transport.schedule(time => this.triggerNote(time, randomNote, noteRythm), bar + ':' + currentBeat  + ':0');\r\n            notes.push(randomNoteTab + \"-\" + noteRythm);\r\n          }\r\n          else{\r\n            let numNotes = GuitarNotes.notesPerBeat[noteRythm];\r\n\r\n            //Fill 1 beat with eigth, eighth triplet, sixteenth, or sixteenth triplet notes\r\n            for(let notePos = 0; notePos < 3.9; notePos += (4 / numNotes)){\r\n              let randomNoteTab = this.randomNote();\r\n              let randomNote = GuitarNotes.tabToNoteCode(randomNoteTab);\r\n\r\n              Tone.Transport.schedule(time => this.triggerNote(time, randomNote, noteRythm), bar + ':' + currentBeat  + ':' + notePos);\r\n              notes.push(randomNoteTab + \"-\" + noteRythm);\r\n            }\r\n\r\n            beats = 1;\r\n          }\r\n\r\n          beatsRemaining -= beats;\r\n          currentBeat = 4 - beatsRemaining;\r\n        }   \r\n      }\r\n\r\n      Tone.Transport.loopEnd = bars + 'm';\r\n      Tone.Transport.loop = true;    \r\n\r\n      return notes;\r\n    }\r\n   \r\n}\r\n\r\nexport default RiffBot;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as Tone from 'tone';\n\nimport RiffBot  from './Riffbot';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>R I F F D E M O N</header>\n      <RiffBot></RiffBot>\n      <footer>Built with <a href=\"https://tonejs.github.io/\" target=\"_blank\">Tone.js</a> and <a href=\"https://jtab.tardate.com/\" target=\"_blank\">jTab</a></footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}